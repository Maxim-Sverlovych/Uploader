{"version":3,"sources":["uploader.js","app.js"],"names":["upload","selector","options","input","document","querySelector","preview","createElement","classList","add","open","textContent","multi","setAttribute","accept","Array","isArray","join","insertAdjacentElement","openInput","click","changeInputHandler","event","target","files","length","from","forEach","file","type","match","reader","FileReader","onload","e","src","result","insertAdjacentHTML","name","readAsDataURL","addEventListener"],"mappings":";;ACAA;;AAEA,sBAAO,OAAP,EAAgB;AACZY,EAAAA,KAAK,EAAE,IADK;AAEZE,EAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB,EAAwB,KAAxB;AAFI,ADFT,CCEP,QDFgBd,MAAT,CAAiBC,QAAjB,EAAyC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AAC5C,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuBJ,QAAvB,CAAd;AACA,MAAMK,OAAO,GAAGF,QAAQ,CAACG,aAAT,CAAuB,KAAvB,CAAhB;AAEAD,EAAAA,OAAO,CAACE,SAAR,CAAkBC,GAAlB,CAAsB,SAAtB;AAEA,MAAMC,IAAI,GAAGN,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAb;AACAG,EAAAA,IAAI,CAACF,SAAL,CAAeC,GAAf,CAAmB,KAAnB;AACAC,EAAAA,IAAI,CAACC,WAAL,GAAmB,MAAnB;;AAEA,MAAIT,OAAO,CAACU,KAAZ,EAAmB;AACfT,IAAAA,KAAK,CAACU,YAAN,CAAmB,UAAnB,EAA+B,IAA/B;AACH;;AAED,MAAIX,OAAO,CAACY,MAAR,IAAkBC,KAAK,CAACC,OAAN,CAAcd,OAAO,CAACY,MAAtB,CAAtB,EAAqD;AACjDX,IAAAA,KAAK,CAACU,YAAN,CAAmB,QAAnB,EAA6BX,OAAO,CAACY,MAAR,CAAeG,IAAf,CAAoB,GAApB,CAA7B;AACH;;AAEDd,EAAAA,KAAK,CAACe,qBAAN,CAA4B,UAA5B,EAAwCZ,OAAxC;AACAH,EAAAA,KAAK,CAACe,qBAAN,CAA4B,UAA5B,EAAwCR,IAAxC;;AAEA,MAAMS,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAMhB,KAAK,CAACiB,KAAN,EAAN;AAAA,GAAlB;;AAEA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,KAAK,EAAI;AAChC,QAAI,CAACA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAxB,EAAgC;AAC5B;AACH;;AAED,QAAMD,KAAK,GAAGT,KAAK,CAACW,IAAN,CAAWJ,KAAK,CAACC,MAAN,CAAaC,KAAxB,CAAd;AAEAA,IAAAA,KAAK,CAACG,OAAN,CAAc,UAAAC,IAAI,EAAI;AAClB,UAAI,CAACA,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAgB,OAAhB,CAAL,EAA+B;AAC3B;AACH;;AAED,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,MAAAA,MAAM,CAACE,MAAP,GAAgB,UAAAC,CAAC,EAAI;AACjB,YAAMC,GAAG,GAAGD,CAAC,CAACX,MAAF,CAASa,MAArB;AAEA9B,QAAAA,OAAO,CAAC+B,kBAAR,CAA2B,YAA3B,kGAEmBF,GAFnB,kBAE8BP,IAAI,CAACU,IAFnC;AAKH,OARD;;AAUAP,MAAAA,MAAM,CAACQ,aAAP,CAAqBX,IAArB;AACH,KAjBD;AAkBH,GAzBD;;AA2BAlB,EAAAA,IAAI,CAAC8B,gBAAL,CAAsB,OAAtB,EAA+BrB,SAA/B;AACAhB,EAAAA,KAAK,CAACqC,gBAAN,CAAuB,QAAvB,EAAiCnB,kBAAjC;AACH","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["export function upload (selector, options = {}) {\r\n    const input = document.querySelector(selector)\r\n    const preview = document.createElement('div')\r\n\r\n    preview.classList.add('preview')\r\n\r\n    const open = document.createElement('button')\r\n    open.classList.add('btn')\r\n    open.textContent = 'OPEN'\r\n\r\n    if (options.multi) {\r\n        input.setAttribute('multiple', true)\r\n    }\r\n\r\n    if (options.accept && Array.isArray(options.accept)) {\r\n        input.setAttribute('accept', options.accept.join(','))\r\n    }\r\n\r\n    input.insertAdjacentElement('afterend', preview)\r\n    input.insertAdjacentElement('afterend', open)\r\n\r\n    const openInput = () => input.click()\r\n\r\n    const changeInputHandler = event => {\r\n        if (!event.target.files.length) {\r\n            return\r\n        }\r\n\r\n        const files = Array.from(event.target.files)\r\n\r\n        files.forEach(file => {\r\n            if (!file.type.match('image')) {\r\n                return\r\n            }\r\n\r\n            const reader = new FileReader()\r\n            reader.onload = e => {\r\n                const src = e.target.result\r\n\r\n                preview.insertAdjacentHTML('afterbegin', `\r\n                    <div class=\"preview-image\">\r\n                        <img src=${src} alt=${file.name} />\r\n                    </div>\r\n                `)\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n    open.addEventListener('click', openInput)\r\n    input.addEventListener('change', changeInputHandler)  \r\n}","import { upload } from './uploader'\r\n\r\nupload('#file', {\r\n    multi: true,\r\n    accept: ['.png', 'jpg', 'jpeg', 'svg']\r\n})"]}