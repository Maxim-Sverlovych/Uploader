{"version":3,"sources":["uploader.js","app.js"],"names":["bytesToSize","bytes","sizes","i","parseInt","Math","floor","log","round","pow","element","tag","classes","content","node","document","createElement","length","classList","add","textContent","noop","upload","selector","options","files","onUpload","input","querySelector","preview","open","uploadFile","style","display","multi","setAttribute","accept","Array","isArray","join","insertAdjacentElement","openInput","click","changeInputHandler","event","target","from","innerHTML","forEach","file","type","match","reader","FileReader","onload","e","src","result","insertAdjacentHTML","name","size","readAsDataURL","removeHandler","dataset","filter","block","closest","setTimeout","remove","changePreview","el","opacity","uploadHandler","querySelectorAll","previewInfo","addEventListener","console"],"mappings":"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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["function bytesToSize(bytes) {\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB']\r\n    if (!bytes) {\r\n        return '0 Byte'\r\n    }\r\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)))\r\n    return Math.round(bytes / Math.pow(1024, i)) + ' ' + sizes[i]\r\n }\r\n\r\n const element = (tag, classes = [], content) => {\r\n     const node = document.createElement(tag)\r\n\r\n     if (classes.length) {\r\n         node.classList.add(...classes)\r\n     }\r\n\r\n     if (content) {\r\n         node.textContent = content\r\n     }\r\n     return node\r\n }\r\n\r\n function noop () {}\r\n\r\nexport function upload (selector, options = {}) {\r\n    let files = []\r\n\r\n    const onUpload = options.onUpload ?? noop\r\n    const input = document.querySelector(selector)\r\n    const preview = element('div', ['preview'])\r\n    const open = element('button', ['btn'], 'OPEN')\r\n    const uploadFile = element('button', ['btn', 'primaty'], 'UPLOAD')\r\n    uploadFile.style.display = 'none'\r\n\r\n    if (options.multi) {\r\n        input.setAttribute('multiple', true)\r\n    }\r\n\r\n    if (options.accept && Array.isArray(options.accept)) {\r\n        input.setAttribute('accept', options.accept.join(','))\r\n    }\r\n\r\n    input.insertAdjacentElement('afterend', preview)\r\n    input.insertAdjacentElement('afterend', uploadFile)\r\n    input.insertAdjacentElement('afterend', open)\r\n\r\n    const openInput = () => input.click()\r\n\r\n    const changeInputHandler = event => {\r\n        if (!event.target.files.length) {\r\n            return\r\n        }\r\n\r\n        files = Array.from(event.target.files)\r\n        preview.innerHTML = ''  \r\n        uploadFile.style.display = 'inline'\r\n\r\n        files.forEach(file => {\r\n            if (!file.type.match('image')) {\r\n                return\r\n            }\r\n\r\n            const reader = new FileReader()\r\n            reader.onload = e => {\r\n                const src = e.target.result\r\n\r\n                preview.insertAdjacentHTML('afterbegin', `\r\n                    <div class=\"preview-image\">\r\n                        <div class=\"preview-remove\" data-name=\"${file.name}\">&times;</div>\r\n                            <img src=${src} alt=${file.name} />\r\n                            <div class=\"preview-info\">\r\n                                <span>${file.name}</span>\r\n                                <span>${bytesToSize(file.size)}</span>\r\n                            </div>\r\n                    </div>\r\n                `)\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n    const removeHandler = event => {\r\n        if (!event.target.dataset.name) {\r\n            return\r\n        }\r\n        const { name } = event.target.dataset\r\n        files = files.filter(file => file.name !== name)\r\n\r\n        if (!files.length) {\r\n            uploadFile.style.display = 'none'\r\n        }\r\n\r\n        const block = preview.querySelector(`[data-name=\"${name}\"]`).closest('.preview-image')\r\n        block.classList.add('removing')\r\n        setTimeout(() => block.remove(), 300)\r\n    }\r\n\r\n    const changePreview = el => {\r\n        el.style.opacity = 1\r\n        el.innerHTML = `<div class=\"preview-info-progress\"></div>`\r\n    }\r\n\r\n    const uploadHandler = () => {\r\n        preview.querySelectorAll('.preview-remove').forEach(el => el.remove())\r\n        const previewInfo = preview.querySelectorAll('.preview-info').forEach(changePreview)\r\n\r\n        onUpload(files)\r\n    }\r\n\r\n    open.addEventListener('click', openInput)\r\n    input.addEventListener('change', changeInputHandler) \r\n    preview.addEventListener('click', removeHandler)\r\n    uploadFile.addEventListener('click', uploadHandler)\r\n}","import { upload } from './uploader'\r\n\r\nupload('#file', {\r\n    multi: true,\r\n    accept: ['.png', 'jpg', 'jpeg', 'svg'],\r\n    onUpload(files) {\r\n        console.log('files:', files);\r\n    }\r\n})"]}